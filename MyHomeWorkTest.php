<?php
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-01-21 at 08:52:30.
 */
class MyHomeWorkTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var MyHomeWork
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new MyHomeWork;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * Generated from @assert (1, 1,1,2014) == "24 day left".
     *
     * @covers MyHomeWork::salaryIsPaid
     */
    public function testSalaryIsPaid()
    {
        $this->assertEquals(
          "24 day left",
          $this->object->salaryIsPaid(1, 1,1,2014)
        );
    }

    /**
     * Generated from @assert (1, 23,8,2013) == "22 day left".
     *
     * @covers MyHomeWork::salaryIsPaid
     */
    public function testSalaryIsPaid2()
    {
        $this->assertEquals(
          "22 day left",
          $this->object->salaryIsPaid(1, 23,8,2013)
        );
    }

    /**
     * Generated from @assert (1, 24,1,2014) == "23 day left".
     *
     * @covers MyHomeWork::salaryIsPaid
     */
    public function testSalaryIsPaid3()
    {
        $this->assertEquals(
          "23 day left",
          $this->object->salaryIsPaid(1, 24,1,2014)
        );
    }

    /**
     * Generated from @assert (2, 1,1,2014) == "23 day left".
     *
     * @covers MyHomeWork::salaryIsPaid
     */
    public function testSalaryIsPaid4()
    {
        $this->assertEquals(
          "23 day left",
          $this->object->salaryIsPaid(2, 1,1,2014)
        );
    }

    /**
     * Generated from @assert (2, 23,8,2013) == "21 day left".
     *
     * @covers MyHomeWork::salaryIsPaid
     */
    public function testSalaryIsPaid5()
    {
        $this->assertEquals(
          "21 day left",
          $this->object->salaryIsPaid(2, 23,8,2013)
        );
    }

    /**
     * Generated from @assert (2, 24,1,2014) == "22 day left".
     *
     * @covers MyHomeWork::salaryIsPaid
     */
    public function testSalaryIsPaid6()
    {
        $this->assertEquals(
          "22 day left",
          $this->object->salaryIsPaid(2, 24,1,2014)
        );
    }

    /**
     * Generated from @assert (24, 1,1,2014) == "tomorow".
     *
     * @covers MyHomeWork::salaryIsPaid
     */
    public function testSalaryIsPaid7()
    {
        $this->assertEquals(
          "tomorow",
          $this->object->salaryIsPaid(24, 1,1,2014)
        );
    }

    /**
     * Generated from @assert (24, 23,8,2013) == "23 day left".
     *
     * @covers MyHomeWork::salaryIsPaid
     */
    public function testSalaryIsPaid8()
    {
        $this->assertEquals(
          "23 day left",
          $this->object->salaryIsPaid(24, 23,8,2013)
        );
    }

    /**
     * Generated from @assert (24, 24,1,2014) == "24 day left".
     *
     * @covers MyHomeWork::salaryIsPaid
     */
    public function testSalaryIsPaid9()
    {
        $this->assertEquals(
          "24 day left",
          $this->object->salaryIsPaid(24, 24,1,2014)
        );
    }

    /**
     * Generated from @assert (25, 1,1,2014) == "You are a rich now".
     *
     * @covers MyHomeWork::salaryIsPaid
     */
    public function testSalaryIsPaid10()
    {
        $this->assertEquals(
          "You are a rich now",
          $this->object->salaryIsPaid(25, 1,1,2014)
        );
    }

    /**
     * Generated from @assert (26, 1,1,2014) == "You are pool now".
     *
     * @covers MyHomeWork::salaryIsPaid
     */
    public function testSalaryIsPaid11()
    {
        $this->assertEquals(
          "You are pool now",
          $this->object->salaryIsPaid(26, 1,1,2014)
        );
    }

    /**
     * Generated from @assert (27, 1,1,2014) == "You got it 2 day ago".
     *
     * @covers MyHomeWork::salaryIsPaid
     */
    public function testSalaryIsPaid12()
    {
        $this->assertEquals(
          "You got it 2 day ago",
          $this->object->salaryIsPaid(27, 1,1,2014)
        );
    }

    /**
     * Generated from @assert (29, 1,1,2014) == "xxx".
     *
     * @covers MyHomeWork::salaryIsPaid
     */
    public function testSalaryIsPaid13()
    {
        $this->assertEquals(
          "xxx",
          $this->object->salaryIsPaid(29, 1,1,2014)
        );
    }

    /**
     * Generated from @assert (30, 1,1,2014) == "xxx".
     *
     * @covers MyHomeWork::salaryIsPaid
     */
    public function testSalaryIsPaid14()
    {
        $this->assertEquals(
          "xxx",
          $this->object->salaryIsPaid(30, 1,1,2014)
        );
    }

    /**
     * Generated from @assert (31, 1,1,2014) == "xxx".
     *
     * @covers MyHomeWork::salaryIsPaid
     */
    public function testSalaryIsPaid15()
    {
        $this->assertEquals(
          "xxx",
          $this->object->salaryIsPaid(31, 1,1,2014)
        );
    }
}
